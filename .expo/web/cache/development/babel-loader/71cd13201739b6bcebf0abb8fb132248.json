{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/home/matt/Documents/Development/csc308outdoors/components/RegisterView.js\";\nimport React, { Component } from 'react';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { withNavigation } from 'react-navigation';\nimport { Card } from 'react-native-elements';\nimport axios from 'axios';\n\nvar RegisterView = function (_Component) {\n  _inherits(RegisterView, _Component);\n\n  function RegisterView(props) {\n    var _this;\n\n    _classCallCheck(this, RegisterView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RegisterView).call(this, props));\n    _this.state = {\n      email: '',\n      name: '',\n      password: '',\n      password2: '',\n      errors: {},\n      isAuthorized: false,\n      isLoading: false\n    };\n    _this.onPressLogin = _this.onPressLogin.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(RegisterView, [{\n    key: \"onPressLogin\",\n    value: function onPressLogin() {\n      var _this2 = this;\n\n      var _this$state, email, name, password, password2, newUser, onSuccess, onFailure;\n\n      return _regeneratorRuntime.async(function onPressLogin$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$state = this.state, email = _this$state.email, name = _this$state.name, password = _this$state.password, password2 = _this$state.password2;\n              newUser = {\n                email: email,\n                name: name,\n                password: password,\n                password2: password2\n              };\n              console.log(newUser);\n\n              onSuccess = function onSuccess() {\n                _this2.setState({\n                  isLoading: false,\n                  isAuthorized: true\n                });\n\n                _this2.props.navigation.navigate('SearchStack');\n              };\n\n              onFailure = function onFailure(error) {\n                console.log('here');\n                console.log(error);\n              };\n\n              this.setState({\n                isLoading: true\n              });\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(axios.post('https://slo-explore-308.herokuapp.com/users/new', {\n                email: email,\n                name: name,\n                password: password,\n                password2: password2\n              }).then(onSuccess).catch(onFailure));\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(ScrollView, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        }\n      }, React.createElement(ImageBackground, {\n        style: styles.imageStyle,\n        source: require(\"../assets/images/slo-background.jpg\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        }\n      }, React.createElement(KeyboardAvoidingView, {\n        style: styles.wrapper,\n        behavior: \"padding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        }\n      }, React.createElement(View, {\n        style: styles.scrollViewWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        }\n      }, React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        }\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        }\n      }, React.createElement(Text, {\n        style: styles.loginText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        }\n      }, \"SLO Explore Registration\"), React.createElement(View, {\n        style: styles.textWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        }\n      }, React.createElement(Text, {\n        style: styles.credentialText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        }\n      }, 'Email:'), React.createElement(TextInput, {\n        style: styles.credentialStyle,\n        onChangeText: function onChangeText(email) {\n          return _this3.setState({\n            email: email\n          });\n        },\n        value: this.state.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        }\n      })), React.createElement(View, {\n        style: styles.textWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        }\n      }, React.createElement(Text, {\n        style: styles.credentialText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        }\n      }, 'Username:'), React.createElement(TextInput, {\n        style: styles.credentialStyle,\n        onChangeText: function onChangeText(name) {\n          return _this3.setState({\n            name: name\n          });\n        },\n        value: this.state.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        }\n      })), React.createElement(View, {\n        style: styles.textWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        }\n      }, React.createElement(Text, {\n        style: styles.credentialText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        }\n      }, 'Password:'), React.createElement(TextInput, {\n        secureTextEntry: true,\n        style: styles.credentialStyle,\n        onChangeText: function onChangeText(password) {\n          return _this3.setState({\n            password: password\n          });\n        },\n        value: this.state.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        }\n      })), React.createElement(View, {\n        style: styles.textWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        }\n      }, React.createElement(Text, {\n        style: styles.credentialText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        }\n      }, 'Confirm Password:'), React.createElement(TextInput, {\n        secureTextEntry: true,\n        style: styles.credentialStyle,\n        onChangeText: function onChangeText(password2) {\n          return _this3.setState({\n            password2: password2\n          });\n        },\n        value: this.state.password2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        }\n      })))), React.createElement(View, {\n        style: styles.buttonWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        }\n      }, React.createElement(TouchableHighlight, {\n        style: styles.buttonStyle,\n        onPress: this.onPressLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        }\n      }, React.createElement(Icon, {\n        name: \"angle-right\",\n        color: \"white\",\n        size: 32,\n        style: styles.iconStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        }\n      })))))));\n    }\n  }]);\n\n  return RegisterView;\n}(Component);\n\nvar styles = StyleSheet.create({\n  wrapper: {\n    display: 'flex',\n    flex: 1\n  },\n  textWrapper: {\n    display: 'flex',\n    flex: 1,\n    paddingLeft: 30\n  },\n  scrollViewWrapper: {\n    marginTop: '20%',\n    flex: 1\n  },\n  loginText: {\n    fontSize: 30,\n    color: 'darkcyan',\n    fontWeight: '400',\n    marginBottom: 10,\n    paddingLeft: 26,\n    paddingRight: 30,\n    paddingTop: 20,\n    textShadowColor: '#BBB',\n    textShadowRadius: 6\n  },\n  credentialText: {\n    color: 'darkcyan',\n    fontWeight: '300'\n  },\n  credentialStyle: {\n    color: 'black',\n    borderBottomColor: 'darkcyan',\n    borderBottomWidth: 2,\n    height: 30,\n    marginRight: 60,\n    marginBottom: 12\n  },\n  buttonWrapper: {\n    alignItems: 'flex-end',\n    right: 20,\n    bottom: 20,\n    paddingTop: 0\n  },\n  buttonStyle: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 50,\n    width: 60,\n    height: 60,\n    backgroundColor: 'green',\n    opacity: 0.6\n  },\n  iconStyle: {\n    marginRight: -2,\n    marginTop: -2\n  },\n  imageStyle: {\n    flex: 1,\n    alignSelf: 'stretch',\n    width: Dimensions.get('window').width,\n    height: Dimensions.get('window').height\n  }\n});\nexport default withNavigation(RegisterView);","map":{"version":3,"sources":["/home/matt/Documents/Development/csc308outdoors/components/RegisterView.js"],"names":["React","Component","Icon","withNavigation","Card","axios","RegisterView","props","state","email","name","password","password2","errors","isAuthorized","isLoading","onPressLogin","bind","newUser","console","log","onSuccess","setState","navigation","navigate","onFailure","error","post","then","catch","styles","container","imageStyle","require","wrapper","scrollViewWrapper","loginText","textWrapper","credentialText","credentialStyle","buttonWrapper","buttonStyle","iconStyle","StyleSheet","create","display","flex","paddingLeft","marginTop","fontSize","color","fontWeight","marginBottom","paddingRight","paddingTop","textShadowColor","textShadowRadius","borderBottomColor","borderBottomWidth","height","marginRight","alignItems","right","bottom","justifyContent","borderRadius","width","backgroundColor","opacity","alignSelf","Dimensions","get"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Icon from 'react-native-vector-icons/FontAwesome'\nimport {\n  ScrollView,\n  Dimensions,\n  StyleSheet,\n  View,\n  Text,\n  TextInput,\n  TouchableHighlight,\n  ImageBackground,\n  KeyboardAvoidingView\n} from 'react-native'\nimport { withNavigation } from 'react-navigation'\nimport { Card } from 'react-native-elements'\nimport axios from 'axios'\n\nclass RegisterView extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      email: '',\n      name: '',\n      password: '',\n      password2: '',\n      errors: {},\n      isAuthorized: false,\n      isLoading: false\n    }\n    this.onPressLogin = this.onPressLogin.bind(this)\n  }\n\n  async onPressLogin () {\n    const { email, name, password, password2 } = this.state\n    const newUser = { email, name, password, password2 }\n    console.log(newUser)\n\n    const onSuccess = () => {\n      // Set JSON Web Token on success\n      this.setState({ isLoading: false, isAuthorized: true })\n      this.props.navigation.navigate('SearchStack')\n    }\n\n    const onFailure = error => {\n      console.log('here')\n      console.log(error)\n    }\n\n    // Show spinner when call is made\n    this.setState({ isLoading: true })\n\n    await axios.post('https://slo-explore-308.herokuapp.com/users/new',\n      {\n        email: email,\n        name: name,\n        password: password,\n        password2: password2\n      })\n      .then(onSuccess)\n      .catch(onFailure)\n  }\n\n  render () {\n    return (\n      <ScrollView style={styles.container}>\n        <ImageBackground\n          style={styles.imageStyle}\n          source={require('../assets/images/slo-background.jpg')}>\n          <KeyboardAvoidingView style={styles.wrapper} behavior=\"padding\">\n            <View style={styles.scrollViewWrapper}>\n              <ScrollView>\n                <Card>\n                  <Text style={styles.loginText}>SLO Explore Registration</Text>\n                  <View style={styles.textWrapper}>\n                    <Text style={styles.credentialText}>{'Email:'}</Text>\n                    <TextInput style={styles.credentialStyle}\n                      onChangeText={(email) => this.setState({ email })}\n                      value={this.state.email}\n                    />\n                  </View>\n                  <View style={styles.textWrapper}>\n                    <Text style={styles.credentialText}>{'Username:'}</Text>\n                    <TextInput style={styles.credentialStyle}\n                      onChangeText={(name) => this.setState({ name })}\n                      value={this.state.name}\n                    />\n                  </View>\n                  <View style={styles.textWrapper}>\n                    <Text style={styles.credentialText}>{'Password:'}</Text>\n                    <TextInput secureTextEntry={true} style={styles.credentialStyle}\n                      onChangeText={(password) => this.setState({ password })}\n                      value={this.state.password}\n                    />\n                  </View>\n                  <View style={styles.textWrapper}>\n                    <Text style={styles.credentialText}>{'Confirm Password:'}</Text>\n                    <TextInput secureTextEntry={true} style={styles.credentialStyle}\n                      onChangeText={(password2) => this.setState({ password2 })}\n                      value={this.state.password2}\n                    />\n                  </View></Card>\n              </ScrollView>\n              <View style={styles.buttonWrapper}>\n                <TouchableHighlight style={styles.buttonStyle}\n                  onPress={this.onPressLogin}>\n                  {/* onPress={() => this.props.navigation.navigate('SearchStack')} */}\n                  <Icon\n                    name=\"angle-right\"\n                    color=\"white\"\n                    size={32}\n                    style={styles.iconStyle}\n                  />\n                </TouchableHighlight>\n              </View>\n            </View>\n          </KeyboardAvoidingView>\n        </ImageBackground>\n      </ScrollView>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    display: 'flex',\n    flex: 1\n  },\n  textWrapper: {\n    display: 'flex',\n    flex: 1,\n    paddingLeft: 30\n  },\n  scrollViewWrapper: {\n    marginTop: '20%',\n    flex: 1\n  },\n  loginText: {\n    fontSize: 30,\n    color: 'darkcyan',\n    fontWeight: '400',\n    marginBottom: 10,\n    paddingLeft: 26,\n    paddingRight: 30,\n    paddingTop: 20,\n    textShadowColor: '#BBB',\n    textShadowRadius: 6\n  },\n  credentialText: {\n    color: 'darkcyan',\n    fontWeight: '300'\n  },\n  credentialStyle: {\n    color: 'black',\n    borderBottomColor: 'darkcyan',\n    borderBottomWidth: 2,\n    height: 30,\n    marginRight: 60,\n    marginBottom: 12\n  },\n  buttonWrapper: {\n    alignItems: 'flex-end',\n    right: 20,\n    bottom: 20,\n    paddingTop: 0\n  },\n  buttonStyle: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 50,\n    width: 60,\n    height: 60,\n    backgroundColor: 'green',\n    opacity: 0.6\n  },\n  iconStyle: {\n    marginRight: -2,\n    marginTop: -2\n  },\n  imageStyle: {\n    flex: 1,\n    alignSelf: 'stretch',\n    width: Dimensions.get('window').width,\n    height: Dimensions.get('window').height\n  }\n})\n\nexport default withNavigation(RegisterView)\n"]},"metadata":{},"sourceType":"module"}